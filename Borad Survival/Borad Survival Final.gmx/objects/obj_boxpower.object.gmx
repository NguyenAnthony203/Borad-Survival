<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boxpower</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>17</depth>
  <persistent>0</persistent>
  <parentName>construct_superclass</parentName>
  <maskName>mask_construct</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>durability = 60 + 10*global.level + global.wave*5;
maxdurability = durability;
invulFrames = 64;
maxInvulFrames = 64;
image_index = 0;
image_speed = 0;

if (global.characterSelected == "Leang"){
    durability *= 1.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checks for bullets hitting the wall
if (distance_to_object(obj_pebbleproj) &lt; 1){
    with instance_nearest(x,y,obj_pebbleproj){
        instance_destroy();
    }
}
if (distance_to_object(obj_pebbleproj2) &lt; 1){
    with instance_nearest(x,y,obj_pebbleproj2){
        instance_destroy();
    }
}
if (distance_to_object(obj_pebbleproj3) &lt; 1){
    with instance_nearest(x,y,obj_pebbleproj3){
        instance_destroy();
    }
}
if (distance_to_object(obj_turretproj) &lt; 1){
    with instance_nearest(x,y,obj_turretproj){
        instance_destroy();
    }
}
if (distance_to_object(obj_icyturretproj) &lt; 1){
    with instance_nearest(x,y,obj_icyturretproj){
        instance_destroy();
    }
}
if (distance_to_object(obj_enemyproj) &lt; 1){
    durability--;
    with instance_nearest(x,y,obj_enemyproj){
        instance_destroy();
    }
}
if (distance_to_object(obj_philipproj) &lt; 1){
    durability--;
    with instance_nearest(x,y,obj_philipproj){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Durability
if (global.pause == false){
if (durability &lt;= 0) instance_destroy();
if (invulFrames &gt; 0) invulFrames--;
if (invulFrames &lt;= 0 &amp;&amp; global.gracePeriod &lt;= 0){
    durability--;
    invulFrames = maxInvulFrames;
}
if (durability / maxdurability &gt;= 0.50){
    image_alpha = 1;
}
else if (durability / maxdurability &lt; 0.50){
    image_alpha = 0.5 + durability/maxdurability;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
