<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_icyturret</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>turret_superclass</parentName>
  <maskName>mask_turret</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>durability = 30;
bullets = 60;
maxBullets = bullets;
maxdurability = durability;
invulFrames = 0;
maxInvulFrames = 64;
damage = 12;
damageRange = 3;
image_speed = 0;
image_index = 0;
powered = false;
powerSource = noone;
powerRange = 500;

if (global.characterSelected == "Leang"){
    bullets *= 1.5;
    durability *= 1.5;
    maxBullets *= 1.5;
}

range = 256;
shootSpeed = 128;
shootCooldown = shootSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///It's survival time left
if (durability &lt;= 0) instance_destroy();
if (durability / maxdurability &gt;= 0.50){
    image_alpha = 1;
}
else if (durability / maxdurability &lt; 0.50){
    image_alpha = 0.5 + durability/maxdurability;
}
if (bullets &lt;= 0){
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shooting nearby enemies
if (global.pause == false){
if (shootCooldown &gt; 0){ shootCooldown--;}
var near;
near = instance_nearest(x,y,enemy_superclass);
if (distance_to_object(near) &lt;= range &amp;&amp; !collision_line(x,y,near.x,near.y,construct_superclass,false,true) &amp;&amp; powered == true){
    if (shootCooldown &lt;= 0 &amp;&amp; bullets &gt; 0){
        var bullet;
        bullet = instance_create(x,y-1, obj_icyturretproj);
        bullet.speed = 12;
        bullet.damage = 12 + floor(random(damageRange*2)) - damageRange;
        bullet.direction = point_direction(x,y,near.x,near.y);
        bullets--;
        shootCooldown = shootSpeed;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checks for bullets hitting the wall
if (distance_to_object(obj_pebbleproj) &lt; 1){
    with instance_nearest(x,y,obj_pebbleproj){
        instance_destroy();
    }
}
if (distance_to_object(obj_pebbleproj2) &lt; 1){
    with instance_nearest(x,y,obj_pebbleproj2){
        instance_destroy();
    }
}
if (distance_to_object(obj_pebbleproj3) &lt; 1){
    with instance_nearest(x,y,obj_pebbleproj3){
        instance_destroy();
    }
}
if (distance_to_object(obj_turretproj) &lt; 1){
    with instance_nearest(x,y,obj_turretproj){
        instance_destroy();
    }
}
if (distance_to_object(obj_enemyproj) &lt; 1){
    durability--;
    with instance_nearest(x,y,obj_enemyproj){
        instance_destroy();
    }
}
if (distance_to_object(obj_philipproj) &lt; 1){
    durability--;
    with instance_nearest(x,y,obj_philipproj){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for a power source nearby
if (distance_to_object(obj_boxpower) &lt;= powerRange){
    powered = true;
    powerSource = instance_nearest(x,y,obj_boxpower);
}
else {
    powered = false;
    powerSource = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_font(enemy_healthbar_text);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text(x,y + sprite_get_height(sprite_index) - 12, string(bullets) + " / " + string(maxBullets));

//Draw wire from self to power source

if (distance_to_object(obj_boxpower) &lt;= powerRange){
    powered = true;
    powerSource = instance_nearest(x,y,obj_boxpower);
}
else {
    powered = false;
    powerSource = noone;
}

if (powered == true &amp;&amp; powerSource != noone){
    draw_sprite_ext(spr_wire,0,x,y - 10,distance_to_point(powerSource.x,powerSource.y)+12,1,point_direction(x,y,powerSource.x,powerSource.y + 3),c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
