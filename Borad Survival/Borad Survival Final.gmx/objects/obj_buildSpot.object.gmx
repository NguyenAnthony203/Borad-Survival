<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8888</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 1;
image_speed = 0;
image_alpha = 0.6;

toRemove= noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Everything
if (global.pause == false){
if (obj_player.buildCooldown &lt;= 0){
    x = round(mouse_x/32)*32;
    y = round(mouse_y/32)*32;;
}

/*
else if (global.buildmode == false || !instance_exists(obj_player)){
    instance_destroy();
}
*/
//Can place something
if (distance_to_object(obj_player) &lt;= 80 &amp;&amp; distance_to_object(obj_player) &gt;=  2  &amp;&amp; distance_to_object(construct_supersuper) &gt;=  2 &amp;&amp; distance_to_object(obj_campfire) &gt;=  2 &amp;&amp; distance_to_object(obj_anvil) &gt;=  2 &amp;&amp; distance_to_object(obj_strawberrysack) &gt;=  2){
    if (global.constructSelected !=3 &amp;&amp; global.constructSelected !=4 || distance_to_object(turret_superclass) &gt;= 64){
        if (global.constructOwned[global.constructSelected,2] &gt; 0){
            image_index = 1;
            global.canBuild = true;
        }
        else {
            image_index = 2;
            global.canBuild = false;
        }
    }
    else {
        image_index = 2;
        global.canBuild = false;
    }
}
else {
    image_index = 2;
    global.canBuild = false;
}
//Remove something
if (mouse_check_button(mb_right) &amp;&amp; distance_to_object(obj_player) &lt;= 80 &amp;&amp; distance_to_object(obj_player) &gt;= 2){
    var oh;
    oh = instance_nearest(x,y,construct_supersuper);
    if (oh != noone &amp;&amp; distance_to_object(oh) &lt; 3){
        with oh{
            instance_destroy();
            oh = noone;
        }
    }
    oh = noone;
}
if (obj_player.buildCooldown &lt;= 1){
    switch(global.constructSelected){
        case 0: sprite_index = spr_floorspikes; break;
        case 1: sprite_index = spr_boxwall; break;
        case 2: sprite_index = spr_truewall; break;
        case 3: sprite_index = spr_turret; break;
        case 4: sprite_index = spr_icyturret; break;
        case 5: sprite_index = spr_boxpower; break;
        case 6: sprite_index = spr_healdispenser; break;
    }
}
else {
    sprite_index = spr_building;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
