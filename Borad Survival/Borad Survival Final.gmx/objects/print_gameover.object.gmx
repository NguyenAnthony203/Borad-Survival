<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width / 2;
y = room_height / 2;
instance_create(x,y + 90,button_backtomenu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var seconds, minutes, hours, cSeconds, cMinutes, cHours;
seconds = global.timeSurvived % 60;
minutes = floor(global.timeSurvived / 60);
hours = floor((global.timeSurvived - seconds - minutes*60)/60);
if (seconds &gt;= 10){
    cSeconds = "" + string(seconds);
}
else {
    cSeconds = "0" + string(seconds);
}

if (minutes &gt;= 10){
    cMinutes= "" + string(minutes);
}
else {
    cMinutes = "0" + string(minutes);
}

if (hours &gt;= 10){
    cHours = "" + string(hours);
}
else {
    cHours = "0" + string(hours);
}
///Draw the entire game over board
draw_sprite(spr_gameoverbox,0,x,y);
draw_set_font(gameover_text);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_color(c_black);
draw_text(x,y-145, "GAME OVER");
draw_set_halign(fa_left);
draw_set_font(gameover_text_small);
draw_text(x - 240, y - 100,"Character: " + string(global.characterSelected));
draw_text(x - 240, y - 80,"Strawberries: " + string(global.totalStrawberries));
draw_text(x - 240, y - 60,"Waves survived: " + string(global.wave)); //Waves
draw_text(x - 240, y - 40,"Level: " + string(global.level)); //Level
draw_text(x - 240, y - 20,"EXP Count: " + string(global.totalEXP)); //Total EXP
draw_text(x - 240, y,"Kill Count: " + string(global.killCount));
draw_text(x - 240, y + 20,"Time Survived: " + string(cHours) + ":" + string(cMinutes) + ":" + string(cSeconds));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
