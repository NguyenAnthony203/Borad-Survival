<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic Variables
global.pause = false;
global.wave = 1;
global.enemiesInWave = 6 + global.wave*global.wave; //Starting at wave 1
global.buildmode = false;
global.totalStrawberries = 0;
global.killCount = 0;
global.timeSurvived = 0;
global.totalEXP = 0;
global.gameOver = false;
global.craftSelected = "Spikes";
timeCounter = room_speed;
//Do not edit this
global.gracePeriod = 3 * 64;

//Berries and how many you can hold
global.holdingBerry = 0;
global.berryLimit = global.baseBerryLimit;

//Movement speed
global.mspeed = global.baseMS;


//Creates some vital objects
instance_create(0,0,draw_gui);
instance_create(0,0,obj_berrySpawner);
instance_create(0,0,spawn_enemies);
    

//For build cooldowns
if (global.characterSelected == "Leang"){
    global.buildCooldown = 4;
}
else {
    global.buildCooldown = 32;
}

//Player Stuff
global.xp = 0;
global.level = 1;
global.maxhp = global.maxhpList[global.level];
global.hp = global.maxhp;
global.cc = 0;
global.weaponselected = 1;

//Weapons owned
global.weaponOwned[0,0] = true; //If weapon is owned (Slingshot)
global.weaponOwned[0,1] = 15; //Amount of ammo in magazine
global.weaponOwned[0,2] = 15; //Max amount of ammo in magazine
global.weaponOwned[0,3] = 60; //Ammo outside of magazine
global.weaponOwned[0,4] = 96; //Reload time in ticks

global.weaponOwned[1,0] = true; //If weapon is owned (Rapid Slingshot)
global.weaponOwned[1,1] = 0; //Amount of ammo in magazine
global.weaponOwned[1,2] = 30; //Max amount of ammo in magazine
global.weaponOwned[1,3] = 0; //Ammo outside of magazine
global.weaponOwned[1,4] = 192;//Reload time in ticks

global.weaponOwned[2,0] = true; //If weapon is owned (Grape Slingshot)
global.weaponOwned[2,1] = 0; //Amount of ammo in magazine
global.weaponOwned[2,2] = 8; //Max amount of ammo in magazine
global.weaponOwned[2,3] = 0; //Ammo outside of magazine
global.weaponOwned[2,4] = 160; //eload time in ticks

global.weaponOwned[3,0] = true;; //If weapon is owned (Sniper Slingshot)
global.weaponOwned[3,1] = 0; //Amount of ammo in magazine
global.weaponOwned[3,2] = 10; //Max amount of ammo in magazine
global.weaponOwned[3,3] = 0; //Ammo outside of magazine
global.weaponOwned[3,4] = 256; //Reload time in ticks

global.weaponOwned[4,0] = true;; //If weapon is owned (Machine Slingshot)
global.weaponOwned[4,1] = 75; //Amount of ammo in magazine
global.weaponOwned[4,2] = 75; //Max amount of ammo in magazine
global.weaponOwned[4,3] = 0; //Ammo outside of magazine
global.weaponOwned[4,4] = 320; //Reload time in ticks
//Constructs owned

global.constructOwned[0,0] = "Spikes"; //Name of construct
global.constructOwned[0,1] = true; //Knowledge of this construct
global.constructOwned[0,2] = 0; //How many of this construct owned

global.constructOwned[1,0] = "Box"; //Name of construct
global.constructOwned[1,1] = true; //Knowledge of this construct
global.constructOwned[1,2] = 0; //How many of this construct owned

global.constructOwned[2,0] = "Wall"; //Name of construct
global.constructOwned[2,1] = true; //Knowledge of this construct
global.constructOwned[2,2] = 0; //How many of this construct owned

global.constructOwned[3,0] = "Turret"; //Name of construct
global.constructOwned[3,1] = true; //Knowledge of this construct
global.constructOwned[3,2] = 0; //How many of this construct owned

global.constructOwned[4,0] = "Icy Turret"; //Name of construct
global.constructOwned[4,1] = true; //Knowledge of this construct
global.constructOwned[4,2] = 0; //How many of this construct owned

global.constructOwned[5,0] = "Powerbox"; //Name of construct
global.constructOwned[5,1] = true; //Knowledge of this construct
global.constructOwned[5,2] = 0; //How many of this construct owned

global.constructOwned[6,0] = "Healbox"; //Name of construct
global.constructOwned[6,1] = true; //Knowledge of this construct
global.constructOwned[6,2] = 0; //How many of this construct owned

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate Background

pickBackground = floor(random(5));

background_visible[0] = true;
background_index[0] = choose(grass_background,sand_background,crackedsand_background,darkgrass_seamless);
background_htiled[0] = true;
background_vtiled[0] = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resolution 
if (window_get_fullscreen() == false){
    view_enabled[0] = true;
    view_visible[0] = true;
    view_wview[0] = global.resWidth;
    view_hview[0] = global.resHeight;
    view_xview[0] = obj_player.x - view_wview[0]/2;
    view_yview[0] = obj_player.y - view_hview[0]/2;
    view_hspeed[0] = -1;
    view_vspeed[0] = -1;
    view_xport[0] = 0;
    view_yport[0] = 0;
    view_wport[0] = global.resWidth;
    view_hport[0] = global.resHeight;
    view_hborder[0] = global.resWidth;
    view_vborder[0] = global.resHeight;
}
else if (window_get_fullscreen() == true){
    view_enabled[0] = true;
    view_visible[0] = true;
    view_wview[0] = window_get_width();
    view_hview[0] = window_get_height();
    view_xview[0] = obj_player.x - view_wview[0]/2;
    view_yview[0] = obj_player.y - view_hview[0]/2;
    view_hspeed[0] = -1;
    view_vspeed[0] = -1;
    view_xport[0] = 0;
    view_yport[0] = 0;
    view_wport[0] = window_get_width();
    view_hport[0] = window_get_height();
    view_hborder[0] = global.resWidth;
    view_vborder[0] = global.resHeight;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Picked up items list stuff
/*
if (global.pickupList[0,0] != ""){
    global.pickupListTimer--;
}

if (global.pickupListTimer &lt;= 0){
    global.pickupListTimer = 320;
    for (i = 0; i &lt; 15; i++){
        for (j = 0; j &lt;= 1; j++){
            if (j == 0){
                global.pickupList[i,j] = "";
            }
            else if (j == 1){
                global.pickupList[i,j] = 0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Berry Limit

if (global.characterSelected == "Borad"){
    global.berryLimit = global.baseBerryLimit + global.level;
}
else if (global.characterSelected == "Leang"){
    global.berryLimit = global.baseBerryLimit + global.level;
}
else if (global.characterSelected == "Delgado"){
    global.berryLimit = (global.baseBerryLimit * 1.5) + (global.level * 2);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the max hp you can have
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Level System
if (global.level != 30){
    if (global.xp &gt;= global.xpRequired[global.level]){
        global.level++;
        global.xp = 0;
        global.maxhp = global.maxhpList[global.level];
        global.hp = global.maxhp;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enter the next wave with a grace period
if (global.pause == false){
if (instance_number(enemy_superclass) == 0 &amp;&amp; global.enemiesInWave == 0){
    global.wave++;
    global.enemiesInWave = 6 + global.wave*(1 + global.wave);
    shiftPickupList("Wave", global.wave);
    shiftPickupList("Grace", 0);
    global.gracePeriod = global.gracePeriodDuration * 64;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Time counter
if (global.pause == false){
if (timeCounter &gt; 0){
    timeCounter--;
}
if (timeCounter &lt;= 0){
    global.timeSurvived += 1;
    timeCounter = room_speed;
}

if (global.hp &lt;=0){
    room_goto(GameOver_Room);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
