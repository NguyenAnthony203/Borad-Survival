<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_debbie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>enemy_superclass</parentName>
  <maskName>mask_debbie</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing Variables
hp = 15;
stuckOutside = 15;//In seconds
stuckOutside *= room_speed;//Converts to ticks
ms = 1.75;
dir = 0;
damage = 15 + round(random(10)) - 5;
isSlowed = 0;
isStunned = 0;
xpWorth = 4;
sniperHit = 0;
floorspikehit = 0;
maxFloorSpikeHit = 64;
image_speed = 0;

amount = 0;
amount = floor(random(amount + 1)) + 1;
maxhp = hp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if (global.pause == false){
if (isStunned &gt; 0){ isStunned--;}
if (isSlowed &gt; 0){ isSlowed--;}

if (distance_to_object(obj_player) &gt; 150 &amp;&amp; image_index == 2){
    image_alpha = 0.025;
}
else {
    image_alpha = 1;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Getting hit and dying
if (global.pause == false){
if (sniperHit &gt;0)sniperHit--;
if (instance_exists(obj_pebbleproj)){
    if (distance_to_object(obj_pebbleproj) &lt; 4){
        var i , j;
        i = instance_nearest(x,y,obj_pebbleproj);
        hp -= i.damage;
        j = instance_create(x,y,draw_damagetext);
        j.owner = self;
        j.damageTaken = i.damage;
        isSlowed = 16;
        with i{
            instance_destroy();
        }
    }
}
if (instance_exists(obj_pebbleproj2)){
    if (distance_to_object(obj_pebbleproj2) &lt; 4){
        var i , j;
        i = instance_nearest(x,y,obj_pebbleproj2);
        hp -= round(i.damage);
        j = instance_create(x,y,draw_damagetext);
        j.owner = self;
        j.damageTaken = round(i.damage);
        isSlowed = 32;
        with i{
            instance_destroy();
        }
    }
}
if (instance_exists(obj_pebbleproj3)){
    if (distance_to_object(obj_pebbleproj3) &lt; 4){
        var i,j,hit;
        if (sniperHit &lt;= 0){
            sniperHit = 48;
            i = instance_nearest(x,y,obj_pebbleproj3);
            hp -= i.damage -((i.maxPierce - i.pierceAmount) * i.damageDropoff);
            j = instance_create(x,y,draw_damagetext);
            j.owner = self;
            j.damageTaken = i.damage-((i.maxPierce - i.pierceAmount) * i.damageDropoff);
            i.pierceAmount--;
            
            isSlowed = 32;
        }
    }
}
if (instance_exists(obj_turretproj)){
    if (distance_to_object(obj_turretproj) &lt; 4){
        var i , j;
        i = instance_nearest(x,y,obj_turretproj);
        hp -= i.damage;
        j = instance_create(x,y,draw_damagetext);
        j.owner = self;
        j.damageTaken = i.damage;
        isSlowed = 16;
        with i{
            instance_destroy();
        }
    }
}

if (instance_exists(obj_icyturretproj)){
    if (distance_to_object(obj_icyturretproj) &lt; 4){
        var i , j;
        i = instance_nearest(x,y,obj_icyturretproj);
        hp -= i.damage;
        j = instance_create(x,y,draw_damagetext);
        j.owner = self;
        j.damageTaken = i.damage;
        isSlowed = 128;
        with i{
            instance_destroy();
        }
    }
}

if (hp &lt;= 0){
    global.xp += xpWorth;
    global.totalEXP += xpWorth;
    global.killCount++;
    shiftPickupList("EXP", xpWorth);
    var e;
    e = instance_create(x,y,obj_enemy3_dead);
    instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check which side the player is on
if (global.pause == false){
if (point_direction(x,y, obj_player.x,obj_player.y) &lt;= 90 &amp;&amp; point_direction(x,y, obj_player.x,obj_player.y) &gt;= 0){
    image_xscale = 1;
    image_yscale = 1;
}
else if (point_direction(x,y, obj_player.x,obj_player.y) &lt;= 360 &amp;&amp; point_direction(x,y, obj_player.x,obj_player.y) &gt; 270){
    image_xscale = 1;
    image_yscale = 1;
}
else if (point_direction(x,y, obj_player.x,obj_player.y) &lt;= 270 &amp;&amp; point_direction(x,y, obj_player.x,obj_player.y) &gt; 90){
    image_xscale = -1;
    image_yscale = 1;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check if stuck outside the room
if (x &lt; 0 || x &gt;= room_width || y &lt; 0 || y &gt;= room_height){
    stuckOutside--;
}
if (stuckOutside &lt;= 0){
    global.enemiesInWave++;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with floor spikes
if (global.pause == false){
if (floorspikehit &gt; 0){ floorspikehit--;}
if (distance_to_object(obj_floorspikes) &lt; 1 &amp;&amp; floorspikehit &lt;= 0){
    var spike, j;
    spike = instance_nearest(x,y,obj_floorspikes);
    spike.durability -= 1;
    hp -= spike.damage;
    j = instance_create(x,y,draw_damagetext);
    j.owner = self;
    j.damageTaken = spike.damage;
    floorspikehit = maxFloorSpikeHit;
    isSlowed = maxFloorSpikeHit/4;
}
if (distance_to_object(obj_floorspikes) &lt; 1){
    isSlowed = 1;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Suicide attack the player
if (global.pause == false){
if (distance_to_object(obj_player) &lt; 3){
    global.hp -= self.damage;
    var e,h;
    e = instance_create(x,y,obj_enemy3_dead);
    h = instance_create(obj_player.x,obj_player.y,draw_damagetext);
    h.owner = obj_player;
    h.damageTaken = self.damage;
    instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>isStunned</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.pause</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>isSlowed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>121</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_potential_step</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>obj_player.x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>obj_player.y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>ms</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>isSlowed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>121</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_potential_step</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>obj_player.x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>obj_player.y</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>ms/2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_boxpower">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with boxwalls
    vspeed = 0;
    hspeed = 0;
    var box;
    box = other;
    if (box.invulFrames &lt;= 0){
        box.durability -= 1;
        box.invulFrames = box.maxInvulFrames;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_boxwall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with boxwalls
    vspeed = 0;
    hspeed = 0;
    var box;
    box = other;
    if (box.invulFrames &lt;= 0){
        box.durability -= 1;
        box.invulFrames = box.maxInvulFrames;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_turret">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with boxwalls
    vspeed = 0;
    hspeed = 0;
    var box;
    box = other;
    if (box.invulFrames &lt;= 0){
        box.durability -= 1;
        box.invulFrames = box.maxInvulFrames;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (distance_to_object(obj_player) &lt;= 150 || image_index != 2){
    //Draw Healthbar
    image_speed = 0;
    draw_set_font(enemy_healthbar_text);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_black);
    draw_text(x,y + sprite_get_height(sprite_index)/2 + 8.5, string(hp) + " / " + string(maxhp));
    draw_sprite_ext(healthbar_background,0, x, y + sprite_get_height(sprite_index)/2 + 4, sprite_get_width(sprite_index)/sprite_get_width(healthbar_background),
    3/8,0, c_white,0.8); //Draws the background of the healthbar
    
    if (hp &gt;= 0){
        draw_sprite_ext(healthbar_red,49 - round((hp / maxhp) * 50), x, y + sprite_get_height(sprite_index)/2 + 4, sprite_get_width(sprite_index)/sprite_get_width(healthbar_background),
        3/8,0, c_white,1); // Draws the healthbar
    }
    
    draw_sprite_ext(healthbar_border,0, x, y + sprite_get_height(sprite_index)/2 + 4, sprite_get_width(sprite_index)/sprite_get_width(healthbar_background),
    3/8,0, c_white,0.8); // Draws healthbar border
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,26</point>
    <point>26,26</point>
  </PhysicsShapePoints>
</object>
